server:
  port: ${SERVER_PORT:8080}

spring:
  config:
    import: optional:file:.env.properties

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      timeout: 60000

#  data:
#    redis:
##      host: localhost # for local run
#      host: redis # for docker run
#      port: 6379
#      timeout: 60000

#
#  redis:
#    host: localhost
#    port: 6379
#    timeout: 60000

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: https://springboot-auth.up.railway.app/login/oauth2/code/google
            scope:
              - email
              - profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

jwt:
  secret: ${JWT_SECRET}
  expiration: 1800000 # 30 minutes in ms

logging:
  level:
    org:
      springframework:
        security: DEBUG
      hibernate:
        SQL: DEBUG

